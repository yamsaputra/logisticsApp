name: Google K8s Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
      
      - name: Install kubectl and gke-gcloud-auth-plugin
        run: |
            gcloud components install kubectl
            gcloud components install gke-gcloud-auth-plugin
            echo "export USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Github Actions Authorization for Google Cloud Setup
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCR_TT_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Google Container Registry
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_TT_KEY }}

      - name: Build and push frontend Docker image
        run: |
          docker build -t gcr.io/trusttrip-447621/frontend:latest ./myApp
          docker push gcr.io/trusttrip-447621/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to Google Kubernetes Engine
        uses: google-github-actions/deploy-cloudrun@main
        with:
          credentials: ${{ secrets.GCR_TT_KEY }}
          image: gcr.io/trusttrip-447621/frontend:latest
          service: frontend-service
          region: europe-west1
          platform: managed
          allow-unauthenticated: true
          port: 8080

      - uses: actions/checkout@v4
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f myApp/k8s/frontend-deployment.yaml

      - uses: actions-hub/kubectl@master
      - uses: actions/checkout@v4
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout restart deployment/frontend