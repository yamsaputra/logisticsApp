name: Google K8s Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Github Actions Authorization for Google Cloud Setup
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCR_TT_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Google Container Registry
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_TT_KEY }}

      - name: Build and push frontend Docker image
        run: |
          docker build -t gcr.io/trusttrip-447621/frontend:latest ./myApp
          docker push gcr.io/trusttrip-447621/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install gcloud and gke-gcloud-auth-plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-cli
          gcloud components install gke-gcloud-auth-plugin

      - name: Decode KUBE_CONFIG and set up kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: "True"

      - name: Apply Kubernetes configuration
        uses: actions-hub/kubectl@master
        with:
          args: apply -f myApp/k8s/frontend-deployment.yaml

      - name: Rollout restart deployment
        uses: actions-hub/kubectl@master
        with:
          args: rollout restart deployment/frontend